{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","legend","id","name","email","CardList","legends","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredLegends","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iVAGaA,EAAO,SAAAC,GAChB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAAMI,OAAOC,GAAvC,4BACrB,6BAAKL,EAAMI,OAAOE,OAClB,4BAAIN,EAAMI,OAAOG,YCFhBC,EAAW,SAAAR,GACpB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,QAAQC,KAAI,SAAAN,GAAM,OACrB,cAAC,EAAD,CAAsBA,OAAQA,GAAnBA,EAAOC,UCNrBM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACIC,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCsCHG,E,kDAvCb,aAAc,IAAD,8BACX,gBAeFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAfrC,EAAKC,MAAQ,CACXb,QAAS,GACTU,YAAa,IAJJ,E,qDAQb,WAAoB,IAAD,OACjBI,MAAM,8CAA8CC,MAClD,SAAAC,GAAQ,OAAIA,EAASC,UACrBF,MACA,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,QAASkB,S,oBAQrC,WACE,MAAiCC,KAAKN,MAA9Bb,EAAR,EAAQA,QAASU,EAAjB,EAAiBA,YACXU,EAAkBpB,EAAQqB,QAAO,SAAA1B,GAAM,OAC3CA,EAAOE,KAAKyB,cAAcC,SAASb,EAAYY,kBAEjD,OACE,sBAAK9B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,QAASoB,W,GAjCTI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3cbb1329.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\n\nexport const Card = props => {\n    return (\n        <div className=\"card-container\">\n            <img alt='legend' src={`https://robohash.org/${props.legend.id}?set=set2&size=180x180`}/>\n            <h2>{props.legend.name}</h2>\n            <p>{props.legend.email}</p>\n        </div>\n    )\n}","import React from \"react\";\n\nimport './card-list.styles.css';\n\nimport {Card} from '../card/card.component';\n\nexport const CardList = props => {\n    return (\n        <div className='card-list'>\n            {props.legends.map(legend => (\n                <Card key={legend.id} legend={legend}/>\n            ))}\n        </div>\n    )\n}","import React from \"react\";\n\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n    <input \n        type='search' \n        placeholder={placeholder}\n        onChange={handleChange}\n    />\n);","import React, {Component} from 'react';\nimport './App.css';\n\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component'\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      legends: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users').then(\n      response => response.json()\n    ).then(\n      users => this.setState({legends: users})\n    )\n  }\n\n  handleChange = e => {\n    this.setState({searchField: e.target.value});\n  }\n\n  render(){\n    const { legends, searchField } = this.state;\n    const filteredLegends = legends.filter(legend => \n      legend.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder='Search Monsters' \n          handleChange={this.handleChange}\n        />\n        <CardList legends={filteredLegends} />\n      </div>\n    );\n\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}